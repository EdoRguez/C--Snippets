Regex phoneNumPattern = new Regex(@"\+[0-9]{1,3}\s+[0-9]{3}\s+[0-9]{7}"); // +58 212 4569874

Regex phoneNumberPattern2 = new Regex(@"\+[0-9]{1,3}[-]+[0-9]{3}[-]+[0-9]{7}"); // Igual que el de arriba pero con - entre los numeros

Regex emailPattern = new Regex(@"^[\w!#$%&'*+\-/=?\^_`{|}~]+(\.[\w!#$%&'*+\-/=?\^_`{|}~]+)*" + "@" + @"((([\-\w]+\.)+[a-zA-Z]{2,4})|(([0-9]{1,3}\.){3}[0-9]{1,3}))$"); // ejemplo@gmail.com

Regex numeroDeCuentaPattern = new Regex(@"[0-9]{20}"); // N. Cuenta bancaria (20 dígitos)

Regex yearPattern = new Regex(@"^(19|20)[0-9][0-9]"); // Años entre 1900 y 2099

Regex numberPattern = new Regex(@"^([0-9]|[1-9][0-9]|100)$"); // Numero entre 1 y 100
Regex numberPattern = new Regex(@"^(100|\d)(\.\d{1,2})?$"); // Numero entre 0 y 100 con decimales


if (!NOMBREDELREGEX.IsMatch(VALORACONFIRMAR))






// Minimum eight characters, at least one letter and one number:
"^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$"

//Minimum eight characters, at least one letter, one number and one special character:
"^(?=.*[A-Za-z])(?=.*\d)(?=.*[$@$!%*#?&])[A-Za-z\d$@$!%*#?&]{8,}$"

//Minimum eight characters, at least one uppercase letter, one lowercase letter and one number:
"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,}$"

// Minimum eight characters, at least one uppercase letter, one lowercase letter, one number and one special character:
"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,}"

"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$"  // SI TE DAN ERRORES PON 2 @

// Minimum eight and maximum 10 characters, at least one uppercase letter, one lowercase letter, one number and one special character:
"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[$@$!%*?&])[A-Za-z\d$@$!%*?&]{8,10}"

